/**
 * ChronosDB swagger
 * ChronosDB Analytics server
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ADFParameters from './model/ADFParameters';
import ADFResponse from './model/ADFResponse';
import ADFResponseAllOf from './model/ADFResponseAllOf';
import ADFResults from './model/ADFResults';
import ARParameters from './model/ARParameters';
import ARResponse from './model/ARResponse';
import ARResponseAllOf from './model/ARResponseAllOf';
import ARResult from './model/ARResult';
import ARResultHet from './model/ARResultHet';
import ARResultLb from './model/ARResultLb';
import AnalyticsResponse from './model/AnalyticsResponse';
import AutocorrelationParameters from './model/AutocorrelationParameters';
import AutocorrelationResponse from './model/AutocorrelationResponse';
import AutocorrelationResponseAllOf from './model/AutocorrelationResponseAllOf';
import AutocorrelationResults from './model/AutocorrelationResults';
import AutocorrelationResultsValues from './model/AutocorrelationResultsValues';
import BKFilterParameters from './model/BKFilterParameters';
import BKFilterResponse from './model/BKFilterResponse';
import BKFilterResponseAllOf from './model/BKFilterResponseAllOf';
import BKFilterResult from './model/BKFilterResult';
import CFFilterParameters from './model/CFFilterParameters';
import CFFilterResponse from './model/CFFilterResponse';
import CFFilterResponseAllOf from './model/CFFilterResponseAllOf';
import CFFilterResult from './model/CFFilterResult';
import CointParameters from './model/CointParameters';
import CointResponse from './model/CointResponse';
import CointResponseAllOf from './model/CointResponseAllOf';
import CointResults from './model/CointResults';
import DType from './model/DType';
import DescriptiveParameters from './model/DescriptiveParameters';
import DescriptiveResponse from './model/DescriptiveResponse';
import DescriptiveResponseAllOf from './model/DescriptiveResponseAllOf';
import DescriptiveResult from './model/DescriptiveResult';
import Frequency from './model/Frequency';
import GrangerParameters from './model/GrangerParameters';
import GrangerResponse from './model/GrangerResponse';
import GrangerResponseAllOf from './model/GrangerResponseAllOf';
import GrangerResults from './model/GrangerResults';
import GrangerResultsLrtest from './model/GrangerResultsLrtest';
import GrangerResultsParamsFtest from './model/GrangerResultsParamsFtest';
import GrangerResultsStats from './model/GrangerResultsStats';
import HPFilterParameters from './model/HPFilterParameters';
import HPFilterResponse from './model/HPFilterResponse';
import HPFilterResponseAllOf from './model/HPFilterResponseAllOf';
import HPFilterResult from './model/HPFilterResult';
import Histogram from './model/Histogram';
import IType from './model/IType';
import KPSSParameters from './model/KPSSParameters';
import KPSSResponse from './model/KPSSResponse';
import KPSSResponseAllOf from './model/KPSSResponseAllOf';
import KPSSResult from './model/KPSSResult';
import LBParameters from './model/LBParameters';
import LBResponse from './model/LBResponse';
import LBResponseAllOf from './model/LBResponseAllOf';
import LBResults from './model/LBResults';
import LMBGParameters from './model/LMBGParameters';
import LMBGResponse from './model/LMBGResponse';
import LMBGResponseAllOf from './model/LMBGResponseAllOf';
import LMBGResults from './model/LMBGResults';
import LMParameters from './model/LMParameters';
import LMResponse from './model/LMResponse';
import LMResponseAllOf from './model/LMResponseAllOf';
import LMResult from './model/LMResult';
import LMSerialCorrParameters from './model/LMSerialCorrParameters';
import LMSerialCorrResponse from './model/LMSerialCorrResponse';
import LMSerialCorrResponseAllOf from './model/LMSerialCorrResponseAllOf';
import LMSerialCorrResults from './model/LMSerialCorrResults';
import LMUnitrootParameters from './model/LMUnitrootParameters';
import LMUnitrootResponse from './model/LMUnitrootResponse';
import LMUnitrootResponseAllOf from './model/LMUnitrootResponseAllOf';
import PPParameters from './model/PPParameters';
import PPResponse from './model/PPResponse';
import PPResponseAllOf from './model/PPResponseAllOf';
import PPResults from './model/PPResults';
import Sample from './model/Sample';
import TSAParameters from './model/TSAParameters';
import TSAResult from './model/TSAResult';
import Timeseries from './model/Timeseries';
import VARParameters from './model/VARParameters';
import VARResponse from './model/VARResponse';
import VARResponseAllOf from './model/VARResponseAllOf';
import VARResult from './model/VARResult';
import WSeries from './model/WSeries';
import WSeriesDownload from './model/WSeriesDownload';
import X12Parameters from './model/X12Parameters';
import X12Response from './model/X12Response';
import X12ResponseAllOf from './model/X12ResponseAllOf';
import X12Result from './model/X12Result';
import ZAParameters from './model/ZAParameters';
import ZAResponse from './model/ZAResponse';
import ZAResponseAllOf from './model/ZAResponseAllOf';
import ZAResult from './model/ZAResult';
import DefaultApi from './api/DefaultApi';
import FilterApi from './api/FilterApi';
import ModelApi from './api/ModelApi';
import TestApi from './api/TestApi';
import WseriesApi from './api/WseriesApi';


/**
* ChronosDB_Analytics_server.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ChronosDbSwagger = require('index'); // See note below*.
* var xxxSvc = new ChronosDbSwagger.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ChronosDbSwagger.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ChronosDbSwagger.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ChronosDbSwagger.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ADFParameters model constructor.
     * @property {module:model/ADFParameters}
     */
    ADFParameters,

    /**
     * The ADFResponse model constructor.
     * @property {module:model/ADFResponse}
     */
    ADFResponse,

    /**
     * The ADFResponseAllOf model constructor.
     * @property {module:model/ADFResponseAllOf}
     */
    ADFResponseAllOf,

    /**
     * The ADFResults model constructor.
     * @property {module:model/ADFResults}
     */
    ADFResults,

    /**
     * The ARParameters model constructor.
     * @property {module:model/ARParameters}
     */
    ARParameters,

    /**
     * The ARResponse model constructor.
     * @property {module:model/ARResponse}
     */
    ARResponse,

    /**
     * The ARResponseAllOf model constructor.
     * @property {module:model/ARResponseAllOf}
     */
    ARResponseAllOf,

    /**
     * The ARResult model constructor.
     * @property {module:model/ARResult}
     */
    ARResult,

    /**
     * The ARResultHet model constructor.
     * @property {module:model/ARResultHet}
     */
    ARResultHet,

    /**
     * The ARResultLb model constructor.
     * @property {module:model/ARResultLb}
     */
    ARResultLb,

    /**
     * The AnalyticsResponse model constructor.
     * @property {module:model/AnalyticsResponse}
     */
    AnalyticsResponse,

    /**
     * The AutocorrelationParameters model constructor.
     * @property {module:model/AutocorrelationParameters}
     */
    AutocorrelationParameters,

    /**
     * The AutocorrelationResponse model constructor.
     * @property {module:model/AutocorrelationResponse}
     */
    AutocorrelationResponse,

    /**
     * The AutocorrelationResponseAllOf model constructor.
     * @property {module:model/AutocorrelationResponseAllOf}
     */
    AutocorrelationResponseAllOf,

    /**
     * The AutocorrelationResults model constructor.
     * @property {module:model/AutocorrelationResults}
     */
    AutocorrelationResults,

    /**
     * The AutocorrelationResultsValues model constructor.
     * @property {module:model/AutocorrelationResultsValues}
     */
    AutocorrelationResultsValues,

    /**
     * The BKFilterParameters model constructor.
     * @property {module:model/BKFilterParameters}
     */
    BKFilterParameters,

    /**
     * The BKFilterResponse model constructor.
     * @property {module:model/BKFilterResponse}
     */
    BKFilterResponse,

    /**
     * The BKFilterResponseAllOf model constructor.
     * @property {module:model/BKFilterResponseAllOf}
     */
    BKFilterResponseAllOf,

    /**
     * The BKFilterResult model constructor.
     * @property {module:model/BKFilterResult}
     */
    BKFilterResult,

    /**
     * The CFFilterParameters model constructor.
     * @property {module:model/CFFilterParameters}
     */
    CFFilterParameters,

    /**
     * The CFFilterResponse model constructor.
     * @property {module:model/CFFilterResponse}
     */
    CFFilterResponse,

    /**
     * The CFFilterResponseAllOf model constructor.
     * @property {module:model/CFFilterResponseAllOf}
     */
    CFFilterResponseAllOf,

    /**
     * The CFFilterResult model constructor.
     * @property {module:model/CFFilterResult}
     */
    CFFilterResult,

    /**
     * The CointParameters model constructor.
     * @property {module:model/CointParameters}
     */
    CointParameters,

    /**
     * The CointResponse model constructor.
     * @property {module:model/CointResponse}
     */
    CointResponse,

    /**
     * The CointResponseAllOf model constructor.
     * @property {module:model/CointResponseAllOf}
     */
    CointResponseAllOf,

    /**
     * The CointResults model constructor.
     * @property {module:model/CointResults}
     */
    CointResults,

    /**
     * The DType model constructor.
     * @property {module:model/DType}
     */
    DType,

    /**
     * The DescriptiveParameters model constructor.
     * @property {module:model/DescriptiveParameters}
     */
    DescriptiveParameters,

    /**
     * The DescriptiveResponse model constructor.
     * @property {module:model/DescriptiveResponse}
     */
    DescriptiveResponse,

    /**
     * The DescriptiveResponseAllOf model constructor.
     * @property {module:model/DescriptiveResponseAllOf}
     */
    DescriptiveResponseAllOf,

    /**
     * The DescriptiveResult model constructor.
     * @property {module:model/DescriptiveResult}
     */
    DescriptiveResult,

    /**
     * The Frequency model constructor.
     * @property {module:model/Frequency}
     */
    Frequency,

    /**
     * The GrangerParameters model constructor.
     * @property {module:model/GrangerParameters}
     */
    GrangerParameters,

    /**
     * The GrangerResponse model constructor.
     * @property {module:model/GrangerResponse}
     */
    GrangerResponse,

    /**
     * The GrangerResponseAllOf model constructor.
     * @property {module:model/GrangerResponseAllOf}
     */
    GrangerResponseAllOf,

    /**
     * The GrangerResults model constructor.
     * @property {module:model/GrangerResults}
     */
    GrangerResults,

    /**
     * The GrangerResultsLrtest model constructor.
     * @property {module:model/GrangerResultsLrtest}
     */
    GrangerResultsLrtest,

    /**
     * The GrangerResultsParamsFtest model constructor.
     * @property {module:model/GrangerResultsParamsFtest}
     */
    GrangerResultsParamsFtest,

    /**
     * The GrangerResultsStats model constructor.
     * @property {module:model/GrangerResultsStats}
     */
    GrangerResultsStats,

    /**
     * The HPFilterParameters model constructor.
     * @property {module:model/HPFilterParameters}
     */
    HPFilterParameters,

    /**
     * The HPFilterResponse model constructor.
     * @property {module:model/HPFilterResponse}
     */
    HPFilterResponse,

    /**
     * The HPFilterResponseAllOf model constructor.
     * @property {module:model/HPFilterResponseAllOf}
     */
    HPFilterResponseAllOf,

    /**
     * The HPFilterResult model constructor.
     * @property {module:model/HPFilterResult}
     */
    HPFilterResult,

    /**
     * The Histogram model constructor.
     * @property {module:model/Histogram}
     */
    Histogram,

    /**
     * The IType model constructor.
     * @property {module:model/IType}
     */
    IType,

    /**
     * The KPSSParameters model constructor.
     * @property {module:model/KPSSParameters}
     */
    KPSSParameters,

    /**
     * The KPSSResponse model constructor.
     * @property {module:model/KPSSResponse}
     */
    KPSSResponse,

    /**
     * The KPSSResponseAllOf model constructor.
     * @property {module:model/KPSSResponseAllOf}
     */
    KPSSResponseAllOf,

    /**
     * The KPSSResult model constructor.
     * @property {module:model/KPSSResult}
     */
    KPSSResult,

    /**
     * The LBParameters model constructor.
     * @property {module:model/LBParameters}
     */
    LBParameters,

    /**
     * The LBResponse model constructor.
     * @property {module:model/LBResponse}
     */
    LBResponse,

    /**
     * The LBResponseAllOf model constructor.
     * @property {module:model/LBResponseAllOf}
     */
    LBResponseAllOf,

    /**
     * The LBResults model constructor.
     * @property {module:model/LBResults}
     */
    LBResults,

    /**
     * The LMBGParameters model constructor.
     * @property {module:model/LMBGParameters}
     */
    LMBGParameters,

    /**
     * The LMBGResponse model constructor.
     * @property {module:model/LMBGResponse}
     */
    LMBGResponse,

    /**
     * The LMBGResponseAllOf model constructor.
     * @property {module:model/LMBGResponseAllOf}
     */
    LMBGResponseAllOf,

    /**
     * The LMBGResults model constructor.
     * @property {module:model/LMBGResults}
     */
    LMBGResults,

    /**
     * The LMParameters model constructor.
     * @property {module:model/LMParameters}
     */
    LMParameters,

    /**
     * The LMResponse model constructor.
     * @property {module:model/LMResponse}
     */
    LMResponse,

    /**
     * The LMResponseAllOf model constructor.
     * @property {module:model/LMResponseAllOf}
     */
    LMResponseAllOf,

    /**
     * The LMResult model constructor.
     * @property {module:model/LMResult}
     */
    LMResult,

    /**
     * The LMSerialCorrParameters model constructor.
     * @property {module:model/LMSerialCorrParameters}
     */
    LMSerialCorrParameters,

    /**
     * The LMSerialCorrResponse model constructor.
     * @property {module:model/LMSerialCorrResponse}
     */
    LMSerialCorrResponse,

    /**
     * The LMSerialCorrResponseAllOf model constructor.
     * @property {module:model/LMSerialCorrResponseAllOf}
     */
    LMSerialCorrResponseAllOf,

    /**
     * The LMSerialCorrResults model constructor.
     * @property {module:model/LMSerialCorrResults}
     */
    LMSerialCorrResults,

    /**
     * The LMUnitrootParameters model constructor.
     * @property {module:model/LMUnitrootParameters}
     */
    LMUnitrootParameters,

    /**
     * The LMUnitrootResponse model constructor.
     * @property {module:model/LMUnitrootResponse}
     */
    LMUnitrootResponse,

    /**
     * The LMUnitrootResponseAllOf model constructor.
     * @property {module:model/LMUnitrootResponseAllOf}
     */
    LMUnitrootResponseAllOf,

    /**
     * The PPParameters model constructor.
     * @property {module:model/PPParameters}
     */
    PPParameters,

    /**
     * The PPResponse model constructor.
     * @property {module:model/PPResponse}
     */
    PPResponse,

    /**
     * The PPResponseAllOf model constructor.
     * @property {module:model/PPResponseAllOf}
     */
    PPResponseAllOf,

    /**
     * The PPResults model constructor.
     * @property {module:model/PPResults}
     */
    PPResults,

    /**
     * The Sample model constructor.
     * @property {module:model/Sample}
     */
    Sample,

    /**
     * The TSAParameters model constructor.
     * @property {module:model/TSAParameters}
     */
    TSAParameters,

    /**
     * The TSAResult model constructor.
     * @property {module:model/TSAResult}
     */
    TSAResult,

    /**
     * The Timeseries model constructor.
     * @property {module:model/Timeseries}
     */
    Timeseries,

    /**
     * The VARParameters model constructor.
     * @property {module:model/VARParameters}
     */
    VARParameters,

    /**
     * The VARResponse model constructor.
     * @property {module:model/VARResponse}
     */
    VARResponse,

    /**
     * The VARResponseAllOf model constructor.
     * @property {module:model/VARResponseAllOf}
     */
    VARResponseAllOf,

    /**
     * The VARResult model constructor.
     * @property {module:model/VARResult}
     */
    VARResult,

    /**
     * The WSeries model constructor.
     * @property {module:model/WSeries}
     */
    WSeries,

    /**
     * The WSeriesDownload model constructor.
     * @property {module:model/WSeriesDownload}
     */
    WSeriesDownload,

    /**
     * The X12Parameters model constructor.
     * @property {module:model/X12Parameters}
     */
    X12Parameters,

    /**
     * The X12Response model constructor.
     * @property {module:model/X12Response}
     */
    X12Response,

    /**
     * The X12ResponseAllOf model constructor.
     * @property {module:model/X12ResponseAllOf}
     */
    X12ResponseAllOf,

    /**
     * The X12Result model constructor.
     * @property {module:model/X12Result}
     */
    X12Result,

    /**
     * The ZAParameters model constructor.
     * @property {module:model/ZAParameters}
     */
    ZAParameters,

    /**
     * The ZAResponse model constructor.
     * @property {module:model/ZAResponse}
     */
    ZAResponse,

    /**
     * The ZAResponseAllOf model constructor.
     * @property {module:model/ZAResponseAllOf}
     */
    ZAResponseAllOf,

    /**
     * The ZAResult model constructor.
     * @property {module:model/ZAResult}
     */
    ZAResult,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The FilterApi service constructor.
    * @property {module:api/FilterApi}
    */
    FilterApi,

    /**
    * The ModelApi service constructor.
    * @property {module:api/ModelApi}
    */
    ModelApi,

    /**
    * The TestApi service constructor.
    * @property {module:api/TestApi}
    */
    TestApi,

    /**
    * The WseriesApi service constructor.
    * @property {module:api/WseriesApi}
    */
    WseriesApi
};
