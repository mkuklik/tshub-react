/**
 * ChronosDB swagger
 * ChronosDB Analytics server
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import X12Parameters from '../model/X12Parameters';
import X12Response from '../model/X12Response';

/**
* Default service.
* @module api/DefaultApi
* @version 0.1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyticsApiX12Post operation.
     * @callback module:api/DefaultApi~analyticsApiX12PostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/X12Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * X12 seasonal adjustment
     * Linear Model
     * @param {module:model/X12Parameters} x12Parameters Time series parameters. dtype and freq are required
     * @param {module:api/DefaultApi~analyticsApiX12PostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/X12Response}
     */
    analyticsApiX12Post(x12Parameters, callback) {
      let postBody = x12Parameters;
      // verify the required parameter 'x12Parameters' is set
      if (x12Parameters === undefined || x12Parameters === null) {
        throw new Error("Missing the required parameter 'x12Parameters' when calling analyticsApiX12Post");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key', 'jwt'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = X12Response;
      return this.apiClient.callApi(
        '/filter/x12', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
