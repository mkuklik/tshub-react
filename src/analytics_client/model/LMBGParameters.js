/**
 * ChronosDB swagger
 * ChronosDB Analytics server
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LMBGParameters model module.
 * @module model/LMBGParameters
 * @version 0.1
 */
class LMBGParameters {
    /**
     * Constructs a new <code>LMBGParameters</code>.
     * @alias module:model/LMBGParameters
     */
    constructor() { 
        
        LMBGParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LMBGParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LMBGParameters} obj Optional instance to populate.
     * @return {module:model/LMBGParameters} The populated <code>LMBGParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LMBGParameters();

            if (data.hasOwnProperty('mid')) {
                obj['mid'] = ApiClient.convertToType(data['mid'], 'String');
            }
            if (data.hasOwnProperty('autolag')) {
                obj['autolag'] = ApiClient.convertToType(data['autolag'], 'String');
            }
            if (data.hasOwnProperty('nlags')) {
                obj['nlags'] = ApiClient.convertToType(data['nlags'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * model ID
 * @member {String} mid
 */
LMBGParameters.prototype['mid'] = undefined;

/**
 * Method to determine the number of lags: `auto`: lags is calculated using int(12 * (n / 100)**(1 / 4)). `nlags`: nlags is used for the number of lags 
 * @member {module:model/LMBGParameters.AutolagEnum} autolag
 * @default 'auto'
 */
LMBGParameters.prototype['autolag'] = 'auto';

/**
 * Maximum lag which is included in test.
 * @member {Number} nlags
 */
LMBGParameters.prototype['nlags'] = undefined;





/**
 * Allowed values for the <code>autolag</code> property.
 * @enum {String}
 * @readonly
 */
LMBGParameters['AutolagEnum'] = {

    /**
     * value: "auto"
     * @const
     */
    "auto": "auto",

    /**
     * value: "nlags"
     * @const
     */
    "nlags": "nlags"
};



export default LMBGParameters;

