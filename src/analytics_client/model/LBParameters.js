/**
 * ChronosDB swagger
 * ChronosDB Analytics server
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WSeries from './WSeries';

/**
 * The LBParameters model module.
 * @module model/LBParameters
 * @version 0.1
 */
class LBParameters {
    /**
     * Constructs a new <code>LBParameters</code>.
     * Ljung-Box serial correlation test parameteres
     * @alias module:model/LBParameters
     */
    constructor() { 
        
        LBParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LBParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LBParameters} obj Optional instance to populate.
     * @return {module:model/LBParameters} The populated <code>LBParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LBParameters();

            if (data.hasOwnProperty('x')) {
                obj['x'] = WSeries.constructFromObject(data['x']);
            }
            if (data.hasOwnProperty('nlags')) {
                obj['nlags'] = ApiClient.convertToType(data['nlags'], 'Number');
            }
            if (data.hasOwnProperty('unbiased')) {
                obj['unbiased'] = ApiClient.convertToType(data['unbiased'], 'Boolean');
            }
            if (data.hasOwnProperty('alpha')) {
                obj['alpha'] = ApiClient.convertToType(data['alpha'], 'Number');
            }
            if (data.hasOwnProperty('dropna')) {
                obj['dropna'] = ApiClient.convertToType(data['dropna'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/WSeries} x
 */
LBParameters.prototype['x'] = undefined;

/**
 * number of lags.
 * @member {Number} nlags
 */
LBParameters.prototype['nlags'] = undefined;

/**
 * @member {Boolean} unbiased
 * @default true
 */
LBParameters.prototype['unbiased'] = true;

/**
 * confidence interval band percentage, e.g. alpha=0.05 is equivalent to confidence interval of 95%
 * @member {Number} alpha
 */
LBParameters.prototype['alpha'] = undefined;

/**
 * Drop missing values; any observations with NaNs are dropped.
 * @member {Boolean} dropna
 */
LBParameters.prototype['dropna'] = undefined;






export default LBParameters;

