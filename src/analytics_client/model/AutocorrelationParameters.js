/**
 * ChronosDB swagger
 * ChronosDB Analytics server
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WSeries from './WSeries';

/**
 * The AutocorrelationParameters model module.
 * @module model/AutocorrelationParameters
 * @version 0.1
 */
class AutocorrelationParameters {
    /**
     * Constructs a new <code>AutocorrelationParameters</code>.
     * @alias module:model/AutocorrelationParameters
     */
    constructor() { 
        
        AutocorrelationParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutocorrelationParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutocorrelationParameters} obj Optional instance to populate.
     * @return {module:model/AutocorrelationParameters} The populated <code>AutocorrelationParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutocorrelationParameters();

            if (data.hasOwnProperty('nlags')) {
                obj['nlags'] = ApiClient.convertToType(data['nlags'], 'Number');
            }
            if (data.hasOwnProperty('unbiased')) {
                obj['unbiased'] = ApiClient.convertToType(data['unbiased'], 'Boolean');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('dropna')) {
                obj['dropna'] = ApiClient.convertToType(data['dropna'], 'Boolean');
            }
            if (data.hasOwnProperty('x')) {
                obj['x'] = WSeries.constructFromObject(data['x']);
            }
        }
        return obj;
    }


}

/**
 * Number of lags
 * @member {Number} nlags
 */
AutocorrelationParameters.prototype['nlags'] = undefined;

/**
 * unbiased estimation of acf
 * @member {Boolean} unbiased
 */
AutocorrelationParameters.prototype['unbiased'] = undefined;

/**
 * Method for the pacf calculation: ‘yw’ : Yule-Walker with bias correction in denominator for acovf. (default) ‘ywm’ : constant and trend. ‘ols’ : regression of time series on lags of it and on constant. ‘olsineff’ : regression of time series on lags using a single common sample to estimate all pacf coefficients. ‘olsb’ : regression of time series on lags with a bias adjustment. ‘ld’ :  Levinson-Durbin recursion with bias correction. ‘ldb’ :  Levinson-Durbin recursion without bias correction.
 * @member {module:model/AutocorrelationParameters.MethodEnum} method
 * @default 'yw'
 */
AutocorrelationParameters.prototype['method'] = 'yw';

/**
 * Drop missing values; any observations with NaNs are dropped.
 * @member {Boolean} dropna
 */
AutocorrelationParameters.prototype['dropna'] = undefined;

/**
 * @member {module:model/WSeries} x
 */
AutocorrelationParameters.prototype['x'] = undefined;





/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
AutocorrelationParameters['MethodEnum'] = {

    /**
     * value: "yw"
     * @const
     */
    "yw": "yw",

    /**
     * value: "ywm"
     * @const
     */
    "ywm": "ywm",

    /**
     * value: "ols"
     * @const
     */
    "ols": "ols",

    /**
     * value: "olse"
     * @const
     */
    "olse": "olse",

    /**
     * value: "olsb"
     * @const
     */
    "olsb": "olsb",

    /**
     * value: "ld"
     * @const
     */
    "ld": "ld",

    /**
     * value: "ldb"
     * @const
     */
    "ldb": "ldb"
};



export default AutocorrelationParameters;

