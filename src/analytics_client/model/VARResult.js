/**
 * ChronosDB swagger
 * ChronosDB Analytics server
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WSeries from './WSeries';

/**
 * The VARResult model module.
 * @module model/VARResult
 * @version 0.1
 */
class VARResult {
    /**
     * Constructs a new <code>VARResult</code>.
     * @alias module:model/VARResult
     */
    constructor() { 
        
        VARResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VARResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VARResult} obj Optional instance to populate.
     * @return {module:model/VARResult} The populated <code>VARResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VARResult();

            if (data.hasOwnProperty('ayid')) {
                obj['ayid'] = ApiClient.convertToType(data['ayid'], 'String');
            }
            if (data.hasOwnProperty('mid')) {
                obj['mid'] = ApiClient.convertToType(data['mid'], 'String');
            }
            if (data.hasOwnProperty('params')) {
                obj['params'] = ApiClient.convertToType(data['params'], {'String': [['Number']]});
            }
            if (data.hasOwnProperty('neqs')) {
                obj['neqs'] = ApiClient.convertToType(data['neqs'], 'Number');
            }
            if (data.hasOwnProperty('nobs')) {
                obj['nobs'] = ApiClient.convertToType(data['nobs'], 'Number');
            }
            if (data.hasOwnProperty('loglike')) {
                obj['loglike'] = ApiClient.convertToType(data['loglike'], 'Number');
            }
            if (data.hasOwnProperty('aic')) {
                obj['aic'] = ApiClient.convertToType(data['aic'], 'Number');
            }
            if (data.hasOwnProperty('bic')) {
                obj['bic'] = ApiClient.convertToType(data['bic'], 'Number');
            }
            if (data.hasOwnProperty('hqic')) {
                obj['hqic'] = ApiClient.convertToType(data['hqic'], 'Number');
            }
            if (data.hasOwnProperty('fpe')) {
                obj['fpe'] = ApiClient.convertToType(data['fpe'], 'Number');
            }
            if (data.hasOwnProperty('det')) {
                obj['det'] = ApiClient.convertToType(data['det'], 'Number');
            }
            if (data.hasOwnProperty('sigma_u')) {
                obj['sigma_u'] = ApiClient.convertToType(data['sigma_u'], [['Number']]);
            }
            if (data.hasOwnProperty('predict')) {
                obj['predict'] = ApiClient.convertToType(data['predict'], [WSeries]);
            }
            if (data.hasOwnProperty('resid')) {
                obj['resid'] = ApiClient.convertToType(data['resid'], [WSeries]);
            }
            if (data.hasOwnProperty('pvalues')) {
                obj['pvalues'] = ApiClient.convertToType(data['pvalues'], [['Number']]);
            }
            if (data.hasOwnProperty('cor_resid')) {
                obj['cor_resid'] = ApiClient.convertToType(data['cor_resid'], [['Number']]);
            }
            if (data.hasOwnProperty('datetime')) {
                obj['datetime'] = ApiClient.convertToType(data['datetime'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * analytics id
 * @member {String} ayid
 */
VARResult.prototype['ayid'] = undefined;

/**
 * model id
 * @member {String} mid
 */
VARResult.prototype['mid'] = undefined;

/**
 * regression coefficients
 * @member {Object.<String, Array.<Array.<Number>>>} params
 */
VARResult.prototype['params'] = undefined;

/**
 * number of equations
 * @member {Number} neqs
 */
VARResult.prototype['neqs'] = undefined;

/**
 * total number of observations
 * @member {Number} nobs
 */
VARResult.prototype['nobs'] = undefined;

/**
 * @member {Number} loglike
 */
VARResult.prototype['loglike'] = undefined;

/**
 * @member {Number} aic
 */
VARResult.prototype['aic'] = undefined;

/**
 * @member {Number} bic
 */
VARResult.prototype['bic'] = undefined;

/**
 * @member {Number} hqic
 */
VARResult.prototype['hqic'] = undefined;

/**
 * @member {Number} fpe
 */
VARResult.prototype['fpe'] = undefined;

/**
 * @member {Number} det
 */
VARResult.prototype['det'] = undefined;

/**
 * @member {Array.<Array.<Number>>} sigma_u
 */
VARResult.prototype['sigma_u'] = undefined;

/**
 * @member {Array.<module:model/WSeries>} predict
 */
VARResult.prototype['predict'] = undefined;

/**
 * @member {Array.<module:model/WSeries>} resid
 */
VARResult.prototype['resid'] = undefined;

/**
 * @member {Array.<Array.<Number>>} pvalues
 */
VARResult.prototype['pvalues'] = undefined;

/**
 * @member {Array.<Array.<Number>>} cor_resid
 */
VARResult.prototype['cor_resid'] = undefined;

/**
 * @member {Date} datetime
 */
VARResult.prototype['datetime'] = undefined;






export default VARResult;

