/**
 * ChronosDB swagger
 * ChronosDB time series database API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnnotationTarget from './AnnotationTarget';

/**
 * The AnnotationHistorical model module.
 * @module model/AnnotationHistorical
 * @version 0.1
 */
class AnnotationHistorical {
    /**
     * Constructs a new <code>AnnotationHistorical</code>.
     * Historical annotation
     * @alias module:model/AnnotationHistorical
     */
    constructor() { 
        
        AnnotationHistorical.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnnotationHistorical</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnnotationHistorical} obj Optional instance to populate.
     * @return {module:model/AnnotationHistorical} The populated <code>AnnotationHistorical</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnnotationHistorical();

            if (data.hasOwnProperty('coll_id')) {
                obj['coll_id'] = ApiClient.convertToType(data['coll_id'], 'String');
            }
            if (data.hasOwnProperty('aid')) {
                obj['aid'] = ApiClient.convertToType(data['aid'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': Object});
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], [AnnotationTarget]);
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('realStart')) {
                obj['realStart'] = ApiClient.convertToType(data['realStart'], 'Date');
            }
            if (data.hasOwnProperty('realEnd')) {
                obj['realEnd'] = ApiClient.convertToType(data['realEnd'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} coll_id
 */
AnnotationHistorical.prototype['coll_id'] = undefined;

/**
 * @member {String} aid
 */
AnnotationHistorical.prototype['aid'] = undefined;

/**
 * annotation symbol
 * @member {String} symbol
 */
AnnotationHistorical.prototype['symbol'] = undefined;

/**
 * @member {String} text
 */
AnnotationHistorical.prototype['text'] = undefined;

/**
 * @member {String} format
 */
AnnotationHistorical.prototype['format'] = undefined;

/**
 * json-type object can be added to annotation to store some extra data or metadata
 * @member {Object.<String, Object>} attributes
 */
AnnotationHistorical.prototype['attributes'] = undefined;

/**
 * annotated targets
 * @member {Array.<module:model/AnnotationTarget>} targets
 */
AnnotationHistorical.prototype['targets'] = undefined;

/**
 * time when the time series definition is valid from
 * @member {Boolean} deleted
 */
AnnotationHistorical.prototype['deleted'] = undefined;

/**
 * time when the time series definition is valid from
 * @member {Date} realStart
 */
AnnotationHistorical.prototype['realStart'] = undefined;

/**
 * time when the time series definition is valid until
 * @member {Date} realEnd
 */
AnnotationHistorical.prototype['realEnd'] = undefined;






export default AnnotationHistorical;

