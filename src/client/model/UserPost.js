/**
 * ChronosDB swagger
 * ChronosDB time series database API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserPostAllOf from './UserPostAllOf';
import UserUpdate from './UserUpdate';

/**
 * The UserPost model module.
 * @module model/UserPost
 * @version 0.1
 */
class UserPost {
    /**
     * Constructs a new <code>UserPost</code>.
     * New User
     * @alias module:model/UserPost
     * @implements module:model/UserUpdate
     * @implements module:model/UserPostAllOf
     */
    constructor() { 
        UserUpdate.initialize(this);UserPostAllOf.initialize(this);
        UserPost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserPost} obj Optional instance to populate.
     * @return {module:model/UserPost} The populated <code>UserPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserPost();
            UserUpdate.constructFromObject(data, obj);
            UserPostAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'Boolean');
            }
            if (data.hasOwnProperty('can_create_space')) {
                obj['can_create_space'] = ApiClient.convertToType(data['can_create_space'], 'Boolean');
            }
            if (data.hasOwnProperty('can_create_group')) {
                obj['can_create_group'] = ApiClient.convertToType(data['can_create_group'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} username
 */
UserPost.prototype['username'] = undefined;

/**
 * First name
 * @member {String} firstName
 */
UserPost.prototype['firstName'] = undefined;

/**
 * Last name
 * @member {String} lastName
 */
UserPost.prototype['lastName'] = undefined;

/**
 * Email
 * @member {String} email
 */
UserPost.prototype['email'] = undefined;

/**
 * Password
 * @member {String} password
 */
UserPost.prototype['password'] = undefined;

/**
 * @member {Boolean} is_admin
 */
UserPost.prototype['is_admin'] = undefined;

/**
 * @member {Boolean} can_create_space
 */
UserPost.prototype['can_create_space'] = undefined;

/**
 * @member {Boolean} can_create_group
 */
UserPost.prototype['can_create_group'] = undefined;


// Implement UserUpdate interface:
/**
 * @member {String} username
 */
UserUpdate.prototype['username'] = undefined;
/**
 * First name
 * @member {String} firstName
 */
UserUpdate.prototype['firstName'] = undefined;
/**
 * Last name
 * @member {String} lastName
 */
UserUpdate.prototype['lastName'] = undefined;
/**
 * Email
 * @member {String} email
 */
UserUpdate.prototype['email'] = undefined;
// Implement UserPostAllOf interface:
/**
 * Password
 * @member {String} password
 */
UserPostAllOf.prototype['password'] = undefined;
/**
 * @member {Boolean} is_admin
 */
UserPostAllOf.prototype['is_admin'] = undefined;
/**
 * @member {Boolean} can_create_space
 */
UserPostAllOf.prototype['can_create_space'] = undefined;
/**
 * @member {Boolean} can_create_group
 */
UserPostAllOf.prototype['can_create_group'] = undefined;




export default UserPost;

