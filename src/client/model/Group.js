/**
 * ChronosDB swagger
 * ChronosDB time series database API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Member from './Member';
import Visibility from './Visibility';

/**
 * The Group model module.
 * @module model/Group
 * @version 0.1
 */
class Group {
    /**
     * Constructs a new <code>Group</code>.
     * @alias module:model/Group
     */
    constructor() { 
        
        Group.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Group</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Group} obj Optional instance to populate.
     * @return {module:model/Group} The populated <code>Group</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Group();

            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'String');
            }
            if (data.hasOwnProperty('groupname')) {
                obj['groupname'] = ApiClient.convertToType(data['groupname'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = Visibility.constructFromObject(data['visibility']);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [Member]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} gid
 */
Group.prototype['gid'] = undefined;

/**
 * @member {String} groupname
 */
Group.prototype['groupname'] = undefined;

/**
 * @member {String} email
 */
Group.prototype['email'] = undefined;

/**
 * @member {String} description
 */
Group.prototype['description'] = undefined;

/**
 * @member {String} organization
 */
Group.prototype['organization'] = undefined;

/**
 * @member {String} location
 */
Group.prototype['location'] = undefined;

/**
 * @member {String} website
 */
Group.prototype['website'] = undefined;

/**
 * @member {module:model/Visibility} visibility
 */
Group.prototype['visibility'] = undefined;

/**
 * @member {Array.<module:model/Member>} members
 */
Group.prototype['members'] = undefined;






export default Group;

