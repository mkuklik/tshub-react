/**
 * ChronosDB swagger
 * ChronosDB time series database API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObservationHistorical model module.
 * @module model/ObservationHistorical
 * @version 0.1
 */
class ObservationHistorical {
    /**
     * Constructs a new <code>ObservationHistorical</code>.
     * @alias module:model/ObservationHistorical
     */
    constructor() { 
        
        ObservationHistorical.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ObservationHistorical</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObservationHistorical} obj Optional instance to populate.
     * @return {module:model/ObservationHistorical} The populated <code>ObservationHistorical</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObservationHistorical();

            if (data.hasOwnProperty('obsId')) {
                obj['obsId'] = ApiClient.convertToType(data['obsId'], 'String');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], Object);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('realStart')) {
                obj['realStart'] = ApiClient.convertToType(data['realStart'], 'Date');
            }
            if (data.hasOwnProperty('realEnd')) {
                obj['realEnd'] = ApiClient.convertToType(data['realEnd'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} obsId
 */
ObservationHistorical.prototype['obsId'] = undefined;

/**
 * @member {Object} index
 */
ObservationHistorical.prototype['index'] = undefined;

/**
 * @member {Object} value
 */
ObservationHistorical.prototype['value'] = undefined;

/**
 * @member {Number} status
 */
ObservationHistorical.prototype['status'] = undefined;

/**
 * @member {Date} realStart
 */
ObservationHistorical.prototype['realStart'] = undefined;

/**
 * @member {Date} realEnd
 */
ObservationHistorical.prototype['realEnd'] = undefined;






export default ObservationHistorical;

