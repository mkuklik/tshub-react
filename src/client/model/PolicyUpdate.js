/**
 * ChronosDB swagger
 * ChronosDB time series database API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: apiteam@chronosdb.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import Effect from './Effect';
import PolicyUpdateObject from './PolicyUpdateObject';
import PolicyUpdateSubject from './PolicyUpdateSubject';

/**
 * The PolicyUpdate model module.
 * @module model/PolicyUpdate
 * @version 0.1
 */
class PolicyUpdate {
    /**
     * Constructs a new <code>PolicyUpdate</code>.
     * @alias module:model/PolicyUpdate
     * @param subject {module:model/PolicyUpdateSubject} 
     * @param _object {module:model/PolicyUpdateObject} 
     * @param action {module:model/Action} 
     * @param effect {module:model/Effect} 
     */
    constructor(subject, _object, action, effect) { 
        
        PolicyUpdate.initialize(this, subject, _object, action, effect);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subject, _object, action, effect) { 
        obj['subject'] = subject;
        obj['object'] = _object;
        obj['action'] = action;
        obj['effect'] = effect;
    }

    /**
     * Constructs a <code>PolicyUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyUpdate} obj Optional instance to populate.
     * @return {module:model/PolicyUpdate} The populated <code>PolicyUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyUpdate();

            if (data.hasOwnProperty('subject')) {
                obj['subject'] = PolicyUpdateSubject.constructFromObject(data['subject']);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = PolicyUpdateObject.constructFromObject(data['object']);
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = Action.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('effect')) {
                obj['effect'] = Effect.constructFromObject(data['effect']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/PolicyUpdateSubject} subject
 */
PolicyUpdate.prototype['subject'] = undefined;

/**
 * @member {module:model/PolicyUpdateObject} object
 */
PolicyUpdate.prototype['object'] = undefined;

/**
 * @member {module:model/Action} action
 */
PolicyUpdate.prototype['action'] = undefined;

/**
 * @member {module:model/Effect} effect
 */
PolicyUpdate.prototype['effect'] = undefined;






export default PolicyUpdate;

