/**
 * FRED API
 * API for accessing economic data from the Federal Reserve Economic Data (FRED) database.
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Categories from './model/Categories';
import CategoriesCategoriesInner from './model/CategoriesCategoriesInner';
import Observations from './model/Observations';
import ObservationsObservationsInner from './model/ObservationsObservationsInner';
import ReleaseDates from './model/ReleaseDates';
import ReleaseDatesReleaseDatesInner from './model/ReleaseDatesReleaseDatesInner';
import Releases from './model/Releases';
import ReleasesReleasesInner from './model/ReleasesReleasesInner';
import Seriess from './model/Seriess';
import SeriessSeriessInner from './model/SeriessSeriessInner';
import Sources from './model/Sources';
import SourcesSourcesInner from './model/SourcesSourcesInner';
import Tags from './model/Tags';
import TagsTagsInner from './model/TagsTagsInner';
import VintageDates from './model/VintageDates';
import CategoryApi from './api/CategoryApi';
import ReleaseApi from './api/ReleaseApi';
import SeriesApi from './api/SeriesApi';
import SourcesApi from './api/SourcesApi';
import TagsApi from './api/TagsApi';


/**
* API for accessing economic data from the Federal Reserve Economic Data (FRED) database..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FredApi = require('index'); // See note below*.
* var xxxSvc = new FredApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FredApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FredApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FredApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Categories model constructor.
     * @property {module:model/Categories}
     */
    Categories,

    /**
     * The CategoriesCategoriesInner model constructor.
     * @property {module:model/CategoriesCategoriesInner}
     */
    CategoriesCategoriesInner,

    /**
     * The Observations model constructor.
     * @property {module:model/Observations}
     */
    Observations,

    /**
     * The ObservationsObservationsInner model constructor.
     * @property {module:model/ObservationsObservationsInner}
     */
    ObservationsObservationsInner,

    /**
     * The ReleaseDates model constructor.
     * @property {module:model/ReleaseDates}
     */
    ReleaseDates,

    /**
     * The ReleaseDatesReleaseDatesInner model constructor.
     * @property {module:model/ReleaseDatesReleaseDatesInner}
     */
    ReleaseDatesReleaseDatesInner,

    /**
     * The Releases model constructor.
     * @property {module:model/Releases}
     */
    Releases,

    /**
     * The ReleasesReleasesInner model constructor.
     * @property {module:model/ReleasesReleasesInner}
     */
    ReleasesReleasesInner,

    /**
     * The Seriess model constructor.
     * @property {module:model/Seriess}
     */
    Seriess,

    /**
     * The SeriessSeriessInner model constructor.
     * @property {module:model/SeriessSeriessInner}
     */
    SeriessSeriessInner,

    /**
     * The Sources model constructor.
     * @property {module:model/Sources}
     */
    Sources,

    /**
     * The SourcesSourcesInner model constructor.
     * @property {module:model/SourcesSourcesInner}
     */
    SourcesSourcesInner,

    /**
     * The Tags model constructor.
     * @property {module:model/Tags}
     */
    Tags,

    /**
     * The TagsTagsInner model constructor.
     * @property {module:model/TagsTagsInner}
     */
    TagsTagsInner,

    /**
     * The VintageDates model constructor.
     * @property {module:model/VintageDates}
     */
    VintageDates,

    /**
    * The CategoryApi service constructor.
    * @property {module:api/CategoryApi}
    */
    CategoryApi,

    /**
    * The ReleaseApi service constructor.
    * @property {module:api/ReleaseApi}
    */
    ReleaseApi,

    /**
    * The SeriesApi service constructor.
    * @property {module:api/SeriesApi}
    */
    SeriesApi,

    /**
    * The SourcesApi service constructor.
    * @property {module:api/SourcesApi}
    */
    SourcesApi,

    /**
    * The TagsApi service constructor.
    * @property {module:api/TagsApi}
    */
    TagsApi
};
