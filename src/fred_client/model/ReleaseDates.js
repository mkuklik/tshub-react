/**
 * FRED API
 * API for accessing economic data from the Federal Reserve Economic Data (FRED) database.
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReleaseDatesReleaseDatesInner from './ReleaseDatesReleaseDatesInner';

/**
 * The ReleaseDates model module.
 * @module model/ReleaseDates
 * @version 1.0.2
 */
class ReleaseDates {
    /**
     * Constructs a new <code>ReleaseDates</code>.
     * @alias module:model/ReleaseDates
     */
    constructor() { 
        
        ReleaseDates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReleaseDates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReleaseDates} obj Optional instance to populate.
     * @return {module:model/ReleaseDates} The populated <code>ReleaseDates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReleaseDates();

            if (data.hasOwnProperty('realtime_start')) {
                obj['realtime_start'] = ApiClient.convertToType(data['realtime_start'], 'Date');
            }
            if (data.hasOwnProperty('realtime_end')) {
                obj['realtime_end'] = ApiClient.convertToType(data['realtime_end'], 'String');
            }
            if (data.hasOwnProperty('order_by')) {
                obj['order_by'] = ApiClient.convertToType(data['order_by'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('release_dates')) {
                obj['release_dates'] = ApiClient.convertToType(data['release_dates'], [ReleaseDatesReleaseDatesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReleaseDates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReleaseDates</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['realtime_end'] && !(typeof data['realtime_end'] === 'string' || data['realtime_end'] instanceof String)) {
            throw new Error("Expected the field `realtime_end` to be a primitive type in the JSON string but got " + data['realtime_end']);
        }
        // ensure the json data is a string
        if (data['order_by'] && !(typeof data['order_by'] === 'string' || data['order_by'] instanceof String)) {
            throw new Error("Expected the field `order_by` to be a primitive type in the JSON string but got " + data['order_by']);
        }
        // ensure the json data is a string
        if (data['sort_order'] && !(typeof data['sort_order'] === 'string' || data['sort_order'] instanceof String)) {
            throw new Error("Expected the field `sort_order` to be a primitive type in the JSON string but got " + data['sort_order']);
        }
        if (data['release_dates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['release_dates'])) {
                throw new Error("Expected the field `release_dates` to be an array in the JSON data but got " + data['release_dates']);
            }
            // validate the optional field `release_dates` (array)
            for (const item of data['release_dates']) {
                ReleaseDatesReleaseDatesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Date} realtime_start
 */
ReleaseDates.prototype['realtime_start'] = undefined;

/**
 * @member {String} realtime_end
 */
ReleaseDates.prototype['realtime_end'] = undefined;

/**
 * @member {String} order_by
 */
ReleaseDates.prototype['order_by'] = undefined;

/**
 * @member {String} sort_order
 */
ReleaseDates.prototype['sort_order'] = undefined;

/**
 * @member {Number} count
 */
ReleaseDates.prototype['count'] = undefined;

/**
 * @member {Number} offset
 */
ReleaseDates.prototype['offset'] = undefined;

/**
 * @member {Number} limit
 */
ReleaseDates.prototype['limit'] = undefined;

/**
 * @member {Array.<module:model/ReleaseDatesReleaseDatesInner>} release_dates
 */
ReleaseDates.prototype['release_dates'] = undefined;






export default ReleaseDates;

